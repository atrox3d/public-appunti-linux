#RUNLEVEL
-------+--------------------+--------------------+-----------------------------------------
 run   | name               | systemd            | description
 level |                    | target             |                  
-------+--------------------+--------------------+-----------------------------------------
 0     | halt               | poweroff.target    | shuts down all the services when the
       |                    |                    | the system will not be rebooted
-------+--------------------+--------------------+-----------------------------------------
 1     | single user        | rescue.target      | used for system maintenance
       |                    |                    | no networking capabilities
-------+--------------------+--------------------+-----------------------------------------
 2,3,4 | multiuser + network| multi-user.target  | non-graphical text mode
       |                    |                    | operations for server systems
-------+--------------------+--------------------+-----------------------------------------
 5     | graphical          | graphical.target   | graphical login with same usability as
       | x11                |                    | of runlevel 3
-------+--------------------+--------------------+-----------------------------------------
 6     | reboot             | reboot.target      | shuts down all services when the 
       |                    |                    | system is being rebooted
-------+--------------------+--------------------+-----------------------------------------

# boot in runlevel 1 - rescue mode
    - al menu GRUB premere e sulla voce interessata (kernel)
    - spostarsi alla fine della riga di caricamento del kernel
        linux...
    - digitare il runlevel
    - premere ctrl-x
    - al reboot inserire password root
    
# single-user mode 7 rescue mode
    systemctl default o ^D per entrare in default mode
        oppure
    digitare la password di root per entrare in maintenance mode

# verificare default target su system-V
	cat /etc/inittab | grep default

# verificare default target su systemd
	systemctl get-default
		graphical-tartget

# cambiare default.target
	systemctl set-default multi-user.target
		rm /etc/systemd/system/default.target
		ln -s /usr/lib/systemd/system/multi-user.target /etc/systemd/system/default.target

# elencare links che collegano i runlevel ai target
	ll -d /lib/systemd/system/run*.target
		lrwxrwxrwx 1 root root ... /lib/systemd/system/runlevel0.target -> poweroff.target
		lrwxrwxrwx 1 root root ... /lib/systemd/system/runlevel1.target -> rescue.target
		lrwxrwxrwx 1 root root ... /lib/systemd/system/runlevel2.target -> multi-user.target
		lrwxrwxrwx 1 root root ... /lib/systemd/system/runlevel3.target -> multi-user.target
		lrwxrwxrwx 1 root root ... /lib/systemd/system/runlevel4.target -> multi-user.target
		lrwxrwxrwx 1 root root ... /lib/systemd/system/runlevel5.target -> graphical.target
		lrwxrwxrwx 1 root root ... /lib/systemd/system/runlevel6.target -> reboot.target

# eseguire boot con una shell root invece di systemd
    - al menu GRUB premere e sulla voce interessata
    - spostarsi alla fine della riga di caricamento del kernel
        linux...
    - digitare
        init=/bin/bash (o /bin/sh)

    - premere ctrl-x per reboot
    - whoami
        root


################################################################################
#
#		boot logs in /var/log
#
################################################################################
# kernel messages
if [ -f /var/log/boot.log ]
then
	#
	# not found in ubuntu and debian
	#
	sudo less -R /var/log/boot.log
else
	#
	#	-H	human readable: color, pager
	#	-T	human readable timestamps
	#	-w	follow
	sudo dmesg -HT
fi

if [ -f /var/log/messages ]
	#
	# log globale
	#
	sudo less /var/log/messages
fi

################################################################################
#
#	journalctl
#	-r	reverse
#	-b	boot [index: default last (0) or one from --list-boots (-1, -2, ...)]
#
################################################################################
# tutti i boot
sudo journalctl

# ultimo boot
sudo journalctl -b

# ultimo boot partendo dalla fine
sudo journalctl -rb

# elencare boot precedenti
sudo journalctl --list-boots 

#
#	risolvere mancanza di boot precedenti
# https://askubuntu.com/questions/765315/how-to-find-previous-boot-log-after-ubuntu-16-04-restarts

# visualizzare un boot specifico
sudo journalctl -b [ index ]

# intervalli temporali
sudo journalctl --since "1 hour ago"
sudo journalctl --since "2 minutes ago"
sudo journalctl --since "2021-01-01"
sudo journalctl --since "2021-01-01" --until "2021-01-01"

# log di specifico utente
ID=$(grep avahi: /etc/passwd | cut -d':' -f3)
sudo journalctl _UID=$ID


# == sudo dmesg
sudo journalctl -k	
sudo journalctl --dmesg

################################################################################
# list systemd unit files
################################################################################
systemctl list-unit-files
	UNIT FILE                              STATE           VENDOR PRESET
	proc-sys-fs-binfmt_misc.automount      static          enabled
	-.mount                                generated       enabled
	boot.mount                             generated       enabled
	dev-hugepages.mount                    static          enabled
	dev-mqueue.mount                       static          enabled
	proc-sys-fs-binfmt_misc.mount          disabled        enabled
	snap-core18-2128.mount                 enabled         enabled
	...

################################################################################
# list systemd units
################################################################################
systemctl
	UNIT                                                                                      LOAD   ACTIVE SUB       DESCRIPTION     >
	proc-sys-fs-binfmt_misc.automount                                                         loaded active waiting   Arbitrary Execut>
	
	sys-devices-pci0000:00-0000:00:01.1-ata2-host1-target1:0:0-1:0:0:0-block-sr0.device       loaded active plugged   VBOX_CD-ROM     >
	
	sys-devices-pci0000:00-0000:00:03.0-net-enp0s3.device                                     loaded active plugged   82540EM Gigabit >
	
	sys-devices-pci0000:00-0000:00:05.0-sound-card0.device                                    loaded active plugged   82801AA AC'97 Au>
	
	...
	
	-.mount                                                                                   loaded active mounted   Root Mount      >
	
	boot.mount                                                                                loaded active mounted   /boot           >
	
	dev-hugepages.mount                                                                       loaded active mounted   Huge Pages File >

	...

# filter unit file
sudo journalctl -u ssh
sudo journalctl _COMM=sshd

sudo journalctl --unit=<unit-name>
	sudo journalctl --unit=boot-uefi.mount
	sudo journalctl --unit=ssh.service

# follow (come tail)
sudo journalctl -f
